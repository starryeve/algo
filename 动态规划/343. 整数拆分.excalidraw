{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "id": "zhlBdq4cqjSnCRbXrOQkr",
      "type": "text",
      "x": 569.60546875,
      "y": 157.51708984375,
      "width": 415,
      "height": 81,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 311469910,
      "version": 197,
      "versionNonce": 567460310,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1658153454456,
      "link": null,
      "locked": false,
      "text": "1. 确定dp数组以及下标含义\ndp[i]：分拆数字i，可以得到的最大乘积为dp[i]\n",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 74,
      "containerId": null,
      "originalText": "1. 确定dp数组以及下标含义\ndp[i]：分拆数字i，可以得到的最大乘积为dp[i]\n"
    },
    {
      "id": "Aj0hLKBHTmRAAkhQwoJDE",
      "type": "text",
      "x": 571.0859375,
      "y": 232.63427734375,
      "width": 535,
      "height": 140,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 490525706,
      "version": 289,
      "versionNonce": 1494672778,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1658153843749,
      "link": null,
      "locked": false,
      "text": "2. 确定递归公式\n可以从1遍历j，然后有两种渠道得到dp[i]:\n1）j * (i - j) 直接相乘\n2）j * dp[i - j]，相当于拆分 (i - j)\n所以，递推公式：dp[i] = max(dp[i], (i-j) * j, dp[i-j] * j)",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 133,
      "containerId": null,
      "originalText": "2. 确定递归公式\n可以从1遍历j，然后有两种渠道得到dp[i]:\n1）j * (i - j) 直接相乘\n2）j * dp[i - j]，相当于拆分 (i - j)\n所以，递推公式：dp[i] = max(dp[i], (i-j) * j, dp[i-j] * j)"
    },
    {
      "id": "sUorAPsUICfbdXNxoO7zk",
      "type": "text",
      "x": 574.3125,
      "y": 395.90380859375,
      "width": 174,
      "height": 56,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 341544982,
      "version": 63,
      "versionNonce": 1707246294,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1658153905399,
      "link": null,
      "locked": false,
      "text": "3. dp初始化\n只初始化dp[2] = 1",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 49,
      "containerId": null,
      "originalText": "3. dp初始化\n只初始化dp[2] = 1"
    },
    {
      "id": "H7Se6Uj-D021ObpegJrK0",
      "type": "text",
      "x": 580.1875,
      "y": 474.41943359375,
      "width": 540,
      "height": 84,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1733802006,
      "version": 238,
      "versionNonce": 98594058,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1658154108129,
      "link": null,
      "locked": false,
      "text": "4. 确定遍历顺序\ndp[i] 赖 dp[i - j] 的状态，所以遍历 i 一定是从前往后的；\n同时，j 是从 1 开始遍历的，i 则是从 3 开始",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 77,
      "containerId": null,
      "originalText": "4. 确定遍历顺序\ndp[i] 赖 dp[i - j] 的状态，所以遍历 i 一定是从前往后的；\n同时，j 是从 1 开始遍历的，i 则是从 3 开始"
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}